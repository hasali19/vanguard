name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo output
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Build application
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin vanguard --target aarch64-unknown-linux-musl
          use-cross: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vanguard-aarch64-unknown-linux-musl
          path: target/aarch64-unknown-linux-musl/release/vanguard

  deploy:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: vanguard-aarch64-unknown-linux-musl
          path: target/release

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/hasali19/vanguard:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
